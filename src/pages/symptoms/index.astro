---
import Layout from '../../layouts/Layout.astro';
import { protectRoute } from '../../utils/auth';
import Navigation from '../../components/Navigation';
import prisma from '../../lib/db';

// Proteger esta ruta - solo usuarios autenticados pueden acceder
const { user } = await protectRoute(Astro);

// Obtener todos los síntomas del usuario
const symptoms = await prisma.symptom.findMany({
  where: {
    userId: user.id,
  },
  orderBy: [
    { date: 'desc' },
    { time: 'desc' }
  ],
  include: {
    meal: true
  }
});

// Agrupar por fecha para mostrar en secciones
const groupedSymptoms = symptoms.reduce((groups, symptom) => {
  const date = new Date(symptom.date).toISOString().split('T')[0];
  if (!groups[date]) {
    groups[date] = [];
  }
  groups[date].push(symptom);
  return groups;
}, {});

// Ordenar fechas de más reciente a más antigua
const sortedDates = Object.keys(groupedSymptoms).sort((a, b) => new Date(b).getTime() - new Date(a).getTime());

---

<Layout title="Síntomas">
  <Navigation user={user} client:load />
  
  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-8">
      <div>
        <h1 class="text-2xl md:text-3xl font-bold text-gray-900 dark:text-white">Síntomas</h1>
        <p class="text-gray-600 dark:text-gray-300 mt-1">Historial de cómo te has sentido</p>
      </div>
      <div class="mt-4 md:mt-0">
        <a 
          href="/symptoms/new" 
          class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
          </svg>
          Registrar síntomas
        </a>
      </div>
    </div>
    
    {symptoms.length === 0 ? (
      <div class="text-center py-16 bg-white dark:bg-gray-800 rounded-lg shadow">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
        </svg>
        <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No hay síntomas registrados</h3>
        <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Comienza registrando cómo te sientes.</p>
        <div class="mt-6">
          <a 
            href="/symptoms/new" 
            class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary-600 hover:bg-primary-700"
          >
            <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
            </svg>
            Registrar síntomas
          </a>
        </div>
      </div>
    ) : (
      <div class="space-y-10">
        {sortedDates.map(date => (
          <div>
            <h2 class="text-lg font-semibold text-gray-900 dark:text-white mb-4 flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-primary-600 dark:text-primary-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
              {new Date(date).toLocaleDateString('es-ES', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}
            </h2>
            
            <div class="space-y-4">
              {groupedSymptoms[date].map(symptom => (
                <div class="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-sm overflow-hidden">
                  <div class="border-l-4 border-yellow-500 px-4 py-4">
                    <div class="sm:flex sm:justify-between sm:items-start">
                      <div>
                        <div class="flex items-center mb-2">
                          <div class="flex items-center mr-2">
                            {Array.from({ length: 5 }).map((_, i) => (
                              <svg 
                                xmlns="http://www.w3.org/2000/svg" 
                                class={`h-5 w-5 ${i < symptom.wellnessLevel ? 'text-yellow-500' : 'text-gray-300 dark:text-gray-600'}`}
                                viewBox="0 0 20 20" 
                                fill="currentColor"
                              >
                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                              </svg>
                            ))}
                          </div>
                          <span class="text-sm font-medium text-gray-900 dark:text-white">
                            Nivel de bienestar: {symptom.wellnessLevel}/5
                          </span>
                          <span class="mx-2 text-gray-500">•</span>
                          <span class="text-sm text-gray-500 dark:text-gray-400">
                            {new Date(symptom.time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
                          </span>
                        </div>
                        
                        <div class="flex flex-wrap gap-1 mb-3">
                          {symptom.symptoms.map((symptomName: string) => (
                            <span class="px-2 py-1 rounded-full text-xs bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300">
                              {symptomName}
                            </span>
                          ))}
                        </div>
                        
                        {symptom.notes && (
                          <p class="text-sm text-gray-600 dark:text-gray-400">
                            {symptom.notes}
                          </p>
                        )}
                        
                        {symptom.meal && (
                          <div class="mt-3 bg-gray-50 dark:bg-gray-700 p-2 rounded-md">
                            <div class="flex items-center">
                              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-500 dark:text-gray-400 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                              </svg>
                              <span class="text-xs font-medium text-gray-700 dark:text-gray-300">Relacionado con:</span>
                            </div>
                            <div class="mt-1">
                              <a 
                                href={`/meals/${symptom.meal.id}`} 
                                class="text-sm text-primary-600 dark:text-primary-400 hover:underline"
                              >
                                {symptom.meal.dishes && symptom.meal.dishes.length > 0 
                                  ? symptom.meal.dishes[0].name
                                  : `Comida del ${new Date(symptom.meal.date).toLocaleDateString('es-ES', { day: 'numeric', month: 'short' })}`}
                              </a>
                            </div>
                          </div>
                        )}
                      </div>
                      
                      <div class="mt-4 sm:mt-0 flex items-center space-x-2">
                        <a 
                          href={`/symptoms/${symptom.id}`}
                          class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300"
                          title="Ver detalles"
                        >
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                          </svg>
                        </a>
                        <a 
                          href={`/symptoms/${symptom.id}/edit`}
                          class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300"
                          title="Editar"
                        >
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                          </svg>
                        </a>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    )}
  </main>
</Layout>
